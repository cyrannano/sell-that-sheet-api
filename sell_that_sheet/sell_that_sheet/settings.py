"""
Django settings for sell_that_sheet project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import drf_yasg
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-3#(l2xx_vkj!p7u55p66^+zqcgwjek&9gtygihr22h$a3pe^=m"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
CORS_ALLOW_ALL_ORIGINS = True

SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "basic": {"type": "basic"},
        "token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
        },
    },
}

# Application definition

INSTALLED_APPS = [
    "django_extensions",
    "corsheaders",
    "sell_that_sheet",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "drf_yasg",
    "django_filters",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = "sell_that_sheet.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "sell_that_sheet.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'STS_DEV',
    #     'HOST': '172.27.167.156',
    #     'PORT': '3306',
    #     'USER': 'root',
    #     'PASSWORD': 'admin',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = 'sell_that_sheet.CustomUser'

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
}

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_ROOT = os.environ["STS_MEDIA_ROOT"]
APP_FILESYSTEM_ROOT = os.environ["STS_APP_FILESYSTEM_ROOT"]

ALLEGRO_CLIENT_ID = os.environ["ALLEGRO_CLIENT_ID"]
ALLEGRO_CLIENT_SECRET = os.environ["ALLEGRO_CLIENT_SECRET"]
ALLEGRO_AUTHORIZATION_BASE_URL = os.environ["ALLEGRO_AUTHORIZATION_BASE_URL"]
ALLEGRO_TOKEN_URL = os.environ["ALLEGRO_TOKEN_URL"]
ALLEGRO_REDIRECT_URI = os.environ["ALLEGRO_REDIRECT_URI"]
ALLEGRO_SCOPES = os.environ["ALLEGRO_SCOPES"]
ALLEGRO_STATE = os.environ["ALLEGRO_STATE"]
BASELINKER_API_KEY = os.environ["BASELINKER_API_KEY"]
CUSTOM_PROPERTIES_DB_PATH = os.environ["CUSTOM_PROPERTIES_DB_PATH"]
OCR_API_KEY = os.environ["OCR_API_KEY"]
OPENAI_API_KEY = os.environ["OPENAI_API_KEY"]
OPENAI_TRANSLATION_ASSISTANT_ID = os.environ["OPENAI_TRANSLATION_ASSISTANT_ID"]

SHIPMENT_WEIGHT_MAPPING = {
    10: 15,
    30: 15,
    40: 40,
    150: 150,
    200: 200
}
